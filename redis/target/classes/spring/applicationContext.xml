<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
           http://www.springframework.org/schema/aop      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
           http://www.springframework.org/schema/task     http://www.springframework.org/schema/task/spring-task-3.2.xsd
           http://www.springframework.org/schema/tx       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       ">
         <!-- 配置自动扫描的包 -->


	<context:property-placeholder ignore-resource-not-found="true" file-encoding="UTF-8"
	location="classpath*:jdbc.properties" />
<!-- 	<context:property-placeholder ignore-resource-not-found="true" file-encoding="UTF-8" -->
<!-- 		location="file:${user.home}/props/jdbc.properties" /> -->
	<bean id="datasource-pcard" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
<!-- 		设置JDBC驱动名称  -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<!-- 设置JDBC连接URL -->
		<property name="url" value="${jdbc.url}" />
		<!-- 设置数据库用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!-- 设置数据库密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 设置连接池初始值 -->
		<property name="initialSize" value="5" />
		<!-- 设置连接池最大值 -->
		<property name="maxActive" value="100" />
		<!-- 设置连接池最小空闲值 -->
		<property name="minIdle" value="10" />
		<!-- 设置连接池最大空闲值 -->
		<property name="maxIdle" value="30" />
		<!-- 设置连接池最大等待时间 -->
		<property name="maxWait" value="100000" />
		<!-- 值就是配置的DBCP的最大闲置时间 , -->
		<property name="timeBetweenEvictionRunsMillis" value="600000" />
		<!-- 毫秒的连接断开，直到连接池中的连接数到minIdle为止 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
	</bean>
	
	<bean id="datasource-job" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jobjdbc.driverClassName}" />
		<property name="url" value="${jobjdbc.url}" />
		<property name="username" value="${jobjdbc.username}" />
		<property name="password" value="${jobjdbc.password}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="minIdle" value="10" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="100000" />
		<property name="timeBetweenEvictionRunsMillis" value="600000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
	</bean>

 <!-- jpa entityManagerFactory --> 
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="datasource-pcard" />
		<property name="packagesToScan" value="com.my.test.entity" />
		<property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />
		<property name="persistenceUnitName" value="pcard" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
			</props>
		</property>
	</bean>
	
	
	 <!-- jpa entityManagerFactory --> 
	<bean id="entityManagerFactoryjob" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="datasource-job" />
		<property name="packagesToScan" value="com.my.test.entity" />
		<property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />
		<property name="persistenceUnitName" value="pcard-job" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
			</props>
		</property>
	</bean>
	
 	<!-- Transaction Manager -->  
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	
	<bean id="transactionManagerjob" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactoryjob" />
	</bean>
		
	<jpa:repositories
	 base-package="com.my.test.repository" 
	 transaction-manager-ref="transactionManager"
	 repository-impl-postfix="Impl" 
	 entity-manager-factory-ref="entityManagerFactory">
	</jpa:repositories>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	
	<jpa:repositories
	 base-package="com.my.test.jobrepository" 
	 transaction-manager-ref="transactionManagerjob"
	 repository-impl-postfix="Impl" 
	 entity-manager-factory-ref="entityManagerFactoryjob">
	</jpa:repositories>
	<tx:annotation-driven transaction-manager="transactionManagerjob" proxy-target-class="true" />
	
	<context:component-scan base-package="com.my.test.rest" />
	<context:component-scan base-package="com.my.test.service" />
	<context:component-scan base-package="com.my.test.entity" />
	<context:component-scan base-package="com.my.test.repository" />


<!-- 	<aop:aspectj-autoproxy proxy-target-class="true" /> -->
<!-- 	<task:executor id="taskExecutor" pool-size="${task.pool_size}" queue-capacity="${task.queue_capacity}" -->
<!-- 		keep-alive="${task.keep_alive}" rejection-policy="CALLER_RUNS" /> -->

<!-- 	<task:annotation-driven executor="taskExecutor" /> -->
	
	
		<!-- spring bean factory -->
	<bean id="springContext" class="com.my.test.util.SpringUtil" />
	
	
	   <bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >
        <property name="jobFactory">
            <bean class="com.my.test.util.SpringBeanJobFactory" />
        </property>
        <property name="dataSource" ref ="datasource-job" />       
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz.properties"/>			
    </bean>
	
	<!-- 配置redis客户端单机版 -->
<!-- 	<bean id="jedispoolConfig" class="redis.clients.jedis.JedisPoolConfig"> -->
<!-- 		<property name="maxTotal" value="${redis.maxactive}" /> -->
<!-- 		<property name="maxIdle" value="${redis.maxidle}" /> -->
<!-- 		<property name="minIdle" value="${redis.minidle}" /> -->
<!-- 		<property name="maxWaitMillis" value="${redis.timeout}" /> -->
<!-- 	</bean> -->
<!-- 	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy" depends-on="jedispoolConfig"> -->
<!-- 		<constructor-arg name="poolConfig" ref="jedispoolConfig" /> -->
<!-- 		<constructor-arg name="host" value="${redis.ip}" /> -->
<!-- 		<constructor-arg name="port" value="${redis.port}" /> -->
<!-- 	</bean> -->
	
	<bean name="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxWaitMillis" value="${redis.cluster.maxWaitMillis}" />
		<property name="maxTotal" value="${redis.cluster.maxTotal}" />
		<property name="minIdle" value="${redis.cluster.minIdle}" />
		<property name="maxIdle" value="${redis.cluster.maxIdle}" />
	</bean>

	<bean id="jedisCluster" class="com.my.test.redis.JedisClusterFactory">
		<property name="connectionTimeout" value="${redis.cluster.connectionTimeout}" />
		<property name="soTimeout" value="${redis.cluster.soTimeout}" />
		<property name="maxRedirections" value="${redis.cluster.maxRedirections}" />
		<property name="genericObjectPoolConfig" ref="genericObjectPoolConfig" />
		<property name="jedisClusterNodes">
			<set>
				<value>${redis.cluster.host1}</value>
				<value>${redis.cluster.host2}</value>
				<value>${redis.cluster.host3}</value>
				<value>${redis.cluster.host4}</value>
				<value>${redis.cluster.host5}</value>
				<value>${redis.cluster.host6}</value>
			</set>
		</property>
	</bean>

	<bean id="jedisClientCluster" class="com.my.test.redis.JedisClientCluster">
		<property name="jedisCluster" ref="jedisCluster"></property>
	</bean>



</beans>
